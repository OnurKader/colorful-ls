#pragma once

#include <array>
#include <optional>
#include <string_view>

// TODO: Change this into std::to_array<std::pair<const char*, const char*>(...);
static constexpr std::array icons {// Peki <3
								   std::pair {"Peki", "\uf004 "},
								   std::pair {"peki", "\uf004 "},
								   // Programming
								   std::pair {"Android", "\ue70e "},
								   std::pair {"Atom", "\ue764 "},
								   std::pair {"C", "\ue61e "},
								   std::pair {"C#", "\uf81a "},
								   std::pair {"C++", "\ue61d "},
								   std::pair {"Eclipse", "\ue79e "},
								   std::pair {"Java", "\ue256 "},
								   std::pair {"LICENSE", "\uf1f9 "},
								   std::pair {"Makefile", "\ue615 "},
								   std::pair {"Python", "\ue235 "},
								   std::pair {"Tupfile", "\ue615 "},
								   std::pair {"android", "\ue70e "},
								   std::pair {"atom", "\ue764 "},
								   std::pair {"c", "\ue61e "},
								   std::pair {"c#", "\uf81a "},
								   std::pair {"c++", "\ue61d "},
								   std::pair {"cxx", "\ue61d "},
								   std::pair {"cc", "\ue61d "},
								   std::pair {"gch", "\ue61d "},
								   std::pair {"class", "\ue256 "},
								   std::pair {"code", "\ufb0f "},
								   std::pair {"cpp", "\ue61d "},
								   std::pair {"cs", "\uf81a "},
								   std::pair {"css", "\ue749 "},
								   std::pair {"eclipse", "\ue79e "},
								   std::pair {"go", "\ufcd1 "},
								   std::pair {"h", "\ue61e "},
								   std::pair {"hh", "\ue61e "},
								   std::pair {"hpp", "\ue61d "},
								   std::pair {"hxx", "\ue61d "},
								   std::pair {"htm", "\ue60e "},
								   std::pair {"html", "\ue736 "},
								   std::pair {"jar", "\ue256 "},
								   std::pair {"java", "\ue256 "},
								   std::pair {"js", "\ue74e "},
								   std::pair {"json", "\ue60b "},
								   std::pair {"lua", "\ue620 "},
								   std::pair {"make", "\ue615 "},
								   std::pair {"makefile", "\ue615 "},
								   std::pair {"mk", "\ue615 "},
								   std::pair {"o", "\ufc0c "},
								   std::pair {"out", "\ufc0c "},
								   std::pair {"pde", "\uf288 "},
								   std::pair {"php", "\uf81e "},
								   std::pair {"py", "\ue235 "},
								   std::pair {"pyc", "\ue73c "},
								   std::pair {"python", "\ue235 "},
								   std::pair {"script", "\ufc0c "},
								   std::pair {"scripts", "\ufc0c "},
								   std::pair {"sh", "\ufc0c "},
								   std::pair {"src", "\uf121 "},
								   std::pair {"tags", "\uf02b "},
								   std::pair {"ts", "\ue628 "},
								   std::pair {"tup", "\ue615 "},
								   std::pair {"vscode", "\ufb0f "},
								   std::pair {"wine", "\uf7a7 "},
								   std::pair {"yaml", "\ue73e "},
								   std::pair {"yml", "\ue73e "},
								   // Vim
								   std::pair {"nvim", "\ue62b "},
								   std::pair {"vi", "\ue62b "},
								   std::pair {"vim", "\ue62b "},
								   std::pair {"vimrc", "\ue62b "},
								   // Shh
								   std::pair {"emacs", "\uf044 "},
								   // Audio
								   std::pair {"mid", "\uf886 "},
								   std::pair {"midi", "\uf886 "},
								   std::pair {"mp3", "\ufc58 "},
								   std::pair {"m4a", "\ufc58 "},
								   std::pair {"mpa", "\ufc58 "},
								   std::pair {"Music", "\ufc58 "},
								   std::pair {"ogg", "\uf886 "},
								   std::pair {"wav", "\uf886 "},
								   std::pair {"wma", "\uf886 "},
								   // Video
								   std::pair {"avi", "\uf880 "},
								   std::pair {"h264", "\uf880 "},
								   std::pair {"m4v", "\uf880 "},
								   std::pair {"mkv", "\uf880 "},
								   std::pair {"mov", "\uf880 "},
								   std::pair {"mp4", "\uf880 "},
								   std::pair {"mpeg", "\uf880 "},
								   std::pair {"mpg", "\uf880 "},
								   std::pair {"Videos", "\uf880 "},
								   std::pair {"webm", "\uf03d "},
								   std::pair {"wmv", "\uf880 "},
								   // Image
								   std::pair {"bmp", "\uf7e8 "},
								   std::pair {"gif", "\ue60d "},
								   std::pair {"jpg", "\uf1c5 "},
								   std::pair {"jpeg", "\uf1c5 "},
								   std::pair {"png", "\uf1c5 "},
								   std::pair {"ppm", "\uf1c5 "},
								   std::pair {"Pictures", "\uf1c5 "},
								   std::pair {"Photos", "\uf1c5 "},
								   std::pair {"ps", "\uf7ea "},
								   std::pair {"psd", "\ue7b8 "},
								   std::pair {"svg", "\ufc1f "},
								   std::pair {"tiff", "\ue60d "},
								   std::pair {"tif", "\ue60d "},
								   std::pair {"xcf", "\uf71e "},
								   // System Stuff
								   std::pair {"bak", "\ue615 "},
								   std::pair {"bashrc", "\ue615 "},
								   std::pair {"bash", "\ue615 "},
								   std::pair {"bin", "\uf114 "},
								   std::pair {"build", "\ue615 "},
								   std::pair {"cfg", "\ue615 "},
								   std::pair {"conf", "\ue615 "},
								   std::pair {"config", "\ue615 "},
								   std::pair {"files", "\ue615 "},
								   std::pair {"includes", "\ue615 "},
								   std::pair {"creator", "\ue615 "},
								   std::pair {"dll", "\uf830 "},
								   std::pair {"firefox", "\ue745 "},
								   std::pair {"exe", "\uf17a "},
								   std::pair {"font", "\uf031 "},
								   std::pair {"fonts", "\uf031 "},
								   std::pair {"inf", "\uf7fc "},
								   std::pair {"info", "\uf7fc "},
								   std::pair {"ico", "\uf6f2 "},
								   std::pair {"icon", "\uf6f2 "},
								   std::pair {"icons", "\uf6f2 "},
								   std::pair {"ini", "\ue70f "},
								   std::pair {"lnk", "\uf17a "},
								   std::pair {"log", "\uf89d "},
								   std::pair {"msi", "\uf17a "},
								   std::pair {"sys", "\ue712 "},
								   std::pair {"temp", "\uf651 "},
								   std::pair {"tmp", "\uf651 "},
								   std::pair {"ttf", "\uf031 "},
								   std::pair {"eot", "\uf031 "},
								   std::pair {"otf", "\uf031 "},
								   std::pair {"woff", "\uf031 "},
								   std::pair {"xml", "\uf72d "},
								   std::pair {"zsh", "\ue615 "},
								   std::pair {"zsh_history", "\uf7d9 "},
								   std::pair {"zshrc", "\ue615 "},
								   // Office Stuff
								   std::pair {"csv", "\uf717 "},
								   std::pair {"doc", "\uf72c "},
								   std::pair {"docx", "\uf72c "},
								   std::pair {"latex", "\ue612 "},
								   std::pair {"md", "\ue609 "},
								   std::pair {"odp", "\uf1c4 "},
								   std::pair {"ods", "\uf1c3 "},
								   std::pair {"odt", "\uf72c "},
								   std::pair {"pdf", "\uf1c1 "},
								   std::pair {"pps", "\uf1c4 "},
								   std::pair {"ppt", "\uf1c4 "},
								   std::pair {"pptx", "\uf1c4 "},
								   std::pair {"rtf", "\uf15c "},
								   std::pair {"tex", "\ue612 "},
								   std::pair {"txt", "\uf0f6 "},
								   std::pair {"xls", "\uf1c3 "},
								   std::pair {"xlsx", "\uf1c3 "},
								   // Archive & Compress
								   std::pair {"7z", "\uf1c6 "},
								   std::pair {"bz2", "\uf066 "},
								   std::pair {"bzip", "\uf066 "},
								   std::pair {"bzip2", "\uf066 "},
								   std::pair {"deb", "\uf306 "},
								   std::pair {"gz", "\uf1c6 "},
								   std::pair {"xz", "\uf1c6 "},
								   std::pair {"pkg", "\uf487 "},
								   std::pair {"rar", "\uf1c6 "},
								   std::pair {"rpm", "\uf316 "},
								   std::pair {"tar", "\uf1c6 "},
								   std::pair {"tgz", "\uf1c6 "},
								   std::pair {"z", "\uf1c6 "},
								   std::pair {"zip", "\uf1c6 "},
								   // Comics
								   std::pair {"Comics", "\uf02d "},
								   std::pair {"cbr", "\ufc98 "},
								   std::pair {"cbz", "\ufc98 "},
								   // Git
								   std::pair {"FETCH_HEAD", "\ue708 "},
								   std::pair {"HEAD", "\ue708 "},
								   std::pair {"ORIG_HEAD", "\ue708 "},
								   std::pair {"branches", "\ue725 "},
								   std::pair {"git", "\ue5fb "},
								   std::pair {"gitconfig", "\uf1d3 "},
								   std::pair {"gitmodules", "\uf1d3 "},
								   std::pair {"gitignore", "\uf1d3 "},
								   std::pair {"hooks", "\ufbe0 "},
								   // Games
								   std::pair {"Minecraft", "\uf872 "},
								   std::pair {"Team Fortress 2", "\uf1b7 "},
								   std::pair {"minecraft", "\uf872 "},
								   std::pair {"steam", "\uf1b6 "}};

static constexpr std::string_view default_file_icon {"\uf15b "};
static constexpr std::string_view default_directory_icon {"\ue5fe "};

inline std::string_view get_ext_from_filename(std::string_view filename)
{
	const auto last_dot = filename.find_last_of('.');
	if(last_dot == filename.npos)
		return filename;

	return filename.substr(last_dot + 1ULL);
}

inline std::optional<std::string_view> get_icon_from_ext(std::string_view ext)
{
	for(auto&& pair: icons)
		if(pair.first == ext)
			return pair.second;

	return std::nullopt;
}

